input {
  s3 {
    bucket => "pockit-cloudtrail-logs"
    type => "cloudtrail"
    secret_access_key => "{{ aws_secret_key }}"
    access_key_id => "{{ aws_access_key }}"
    codec => "cloudtrail"
  }
  s3 {
    bucket => "pockit-elb-logs"
    type => "elb"
    secret_access_key => "{{ aws_secret_key }}"
    access_key_id => "{{ aws_access_key }}"
    codec => "json"
  }
}
filter {
    if [type] == "cloudtrail" {
    geoip {
      source => "sourceIPAddress"
      target => "geoip"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
    }
    if [type] == "elb" {
        grok {
            match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:loadbalancer} %{IP:client_ip}:%{NUMBER:client_port:int} %{IP:backend_ip}:%{NUMBER:backend_port:int} %{NUMBER:request_processing_time:float} %{NUMBER:backend_processing_time:float} %{NUMBER:response_processing_time:float} %{NUMBER:elb_status_code:int} %{NUMBER:backend_status_code:int} %{NUMBER:received_bytes:int} %{NUMBER:sent_bytes:int} %{QS:request}" ]
        }
geoip {
      source => "client_ip"
      target => "geoip"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
    mutate {
      convert => [ "[geoip][coordinates]", "float"]
    }
    }
}
